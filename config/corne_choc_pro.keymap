/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * 
 * Corne Choc Pro keymap for programming in C#/TypeScript/JavaScript
 * with Finnish character support (Ö, Ä)
 * Requires OS keyboard layout set to Finnish
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include "keys_fi.h"
#include "keys_fi_mac.h"

// Layer definitions
#define BASE   0
#define NUMBER 1  
#define FUNCTION 2
#define PROG   3
#define BASE_MAC 4
#define NUMBER_MAC 5
#define FUNCTION_MAC 6
#define PROG_MAC 7
#define KEYBOARD 8

/ {
    chosen {
        zmk,physical-layout = &default_layout;
    };
    
    // Macros for comparison operators (not very practical more of a test)
    macros {
        less_equal: less_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp FI_LT &kp FI_EQUAL>;
        };
        
        greater_equal: greater_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp FI_GT &kp FI_EQUAL>;
        };
        
        not_equal: not_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp FI_EXCL &kp FI_EQUAL>;
        };

        // Mac-specific comparison operators using Mac keys
        mac_less_equal: mac_less_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp FI_MAC_LT &kp FI_MAC_EQUAL>;
        };
        
        mac_greater_equal: mac_greater_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp FI_MAC_GT &kp FI_MAC_EQUAL>;
        };
        
        mac_not_equal: mac_not_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp FI_MAC_EXCL &kp FI_MAC_EQUAL>;
        };
    };
    
    // Combos for keyboard layer access (safety: requires 3-key combination)
    combos {
        compatible = "zmk,combos";
        combo_keyboard_layer_left {
            timeout-ms = <50>;
            key-positions = <40 41 42>; // Left thumb: GUI + PROG + SPACE
            bindings = <&tog KEYBOARD>;
        };
        combo_keyboard_layer_right {
            timeout-ms = <50>;
            key-positions = <43 44 45>; // Right thumb: ENT + FUNCTION + NUMBER
            bindings = <&tog KEYBOARD>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "Base";
// -----------------------------------------------------------------------------------------
// QWERTY layout with Finnish characters (Ö, Ä) and basic punctuation
// | ESC  |  Q  |  W  |  E  |  R  |  T  |LALT|RALT|  Y  |  U  |   I  |  O  |  P  | BSPC |
// | TAB  |  A  |  S  |  D  |  F  |  G  |LCTRL|RCTRL|  H  |  J  |   K  |  L  |  Ö  |  Ä   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |     |     |  N  |  M  |   ,  |  .  |  -  | SHFT |
//                   | GUI |PROG | SPC |             | ENT |FUNC|NUMBR|
            bindings = <
   &kp ESC   &kp FI_Q &kp FI_W &kp FI_E &kp FI_R &kp FI_T   &kp LALT   &kp RALT   &kp FI_Y &kp FI_U  &kp FI_I     &kp FI_O   &kp FI_P    &kp BSPC
   &kp TAB   &kp FI_A &kp FI_S &kp FI_D &kp FI_F &kp FI_G   &kp LCTRL  &kp RCTRL  &kp FI_H &kp FI_J  &kp FI_K     &kp FI_L   &kp FI_O_UMLAUT &kp FI_A_UMLAUT
   &kp LSHFT &kp FI_Z &kp FI_X &kp FI_C &kp FI_V &kp FI_B                         &kp FI_N &kp FI_M  &kp FI_COMMA &kp FI_DOT &kp FI_MINUS &kp RSHFT
                               &kp LGUI &mo PROG &kp FI_SPACE                           &kp RET &mo FUNCTION &tog NUMBER
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN &inc_dec_kp C_PREV C_NEXT &inc_dec_kp C_BRI_DN C_BRI_UP>;
        };

        number_layer {
            display-name = "Number";  
// -----------------------------------------------------------------------------------------
// Numbers with mathematical operators - toggle layer for calculations
// |TRANS |  1  |  2  |  3  |  4  |  5  |TRANS|TRANS|  6  |  7  |  8  |  9  |  0  |TRANS |
// |TRANS |  +  |  -  |  *  |  /  |  =  |TRANS|TRANS|  %  |  ^  |  &  |  |  |  (  |  )   |
// |TRANS |  <  |  >  | <=  | >=  | !=  |     |     |  €  |  $  |  §  |TRANS|TRANS|TRANS |
//                   |TRANS|TRANS|TRANS |             |TRANS|TRANS|NUMBR|
            bindings = <
   &trans &kp FI_N1   &kp FI_N2    &kp FI_N3        &kp FI_N4         &kp FI_N5         &trans &trans        &kp FI_N6    &kp FI_N7    &kp FI_N8   &kp FI_N9   &kp FI_N0    &trans
   &trans &kp FI_PLUS &kp FI_MINUS &kp FI_ASTRK     &kp FI_FSLH       &kp FI_EQUAL      &trans &trans        &kp FI_PRCNT &kp FI_CARET &kp FI_AMPS &kp FI_PIPE &kp FI_LPAR  &kp FI_RPAR
   &trans &kp FI_LT   &kp FI_GT    &less_equal      &greater_equal    &not_equal                               &kp FI_EURO  &kp FI_DLLR  &kp FI_SECT &trans      &trans &trans
                               &trans       &trans         &trans                         &trans  &trans    &tog NUMBER
            >;
        };

        function_layer {
            display-name = "Function";
// -----------------------------------------------------------------------------------------
// Function keys (F1-F12), navigation, and basic punctuation - hold layer
// |TRANS| F1  | F2  | F3  | F4  | F5  |TRANS|TRANS| F6  | F7  | F8  | F9  | F10 | DEL  |
// |TRANS| F11 | F12 |  ?  |  :  |  ;  |TRANS|TRANS|  ←  |  ↓  |  ↑  |  →  |PGUP |PGDN  |
// |TRANS| '   | "   |  <  |  >  |  "  |     |     |HOME | END |UNDO |REDO |STAB |TRANS |
//                   |TRANS|TRANS|TRANS|             |TRANS|TRANS|TRANS|
            bindings = <
   &trans &kp F1       &kp F2      &kp F3    &kp F4    &kp F5     &trans &trans  &kp F6   &kp F7   &kp F8     &kp F9      &kp F10         &kp DEL
   &trans &kp F11      &kp F12     &kp FI_QMARK &kp FI_COLON &kp FI_SEMI &trans  &trans &kp LEFT &kp DOWN &kp UP     &kp RIGHT   &kp PG_UP       &kp PG_DN
   &trans &kp FI_SQT   &kp FI_DQT  &kp FI_LT &kp FI_GT &kp FI_DQT                       &kp HOME &kp END  &kp K_UNDO &kp K_REDO  &kp LS(TAB)     &trans
                              &trans    &trans  &trans                  &trans &trans  &trans
            >;
        };

        programming_layer {
            display-name = "Programming";
// -----------------------------------------------------------------------------------------  
// All programming symbols - brackets, quotes, operators - hold layer
// |TRANS|  {  |  }  |  [  |  ]  |  \  |TRANS|TRANS|  `  |  ~  |  !  |  @  |  #  |TRANS |
// |TRANS|  (  |  )  |  <  |  >  |  /  |TRANS|TRANS|  "  |  '  |  :  |  ;  |  ?  |TRANS |
// |TRANS|  $  |  %  |  ^  |  &  |  *  |     |     |  |  |  \  |  +  |  -  |  =  |TRANS |
//                   |TRANS|PROG |TRANS|             |TRANS|TRANS|TRANS|
            bindings = <
   &trans &kp FI_LBRC &kp FI_RBRC &kp FI_LBKT &kp FI_RBKT &kp FI_BSLH &trans &trans &kp FI_GRAVE &kp FI_TILDE &kp FI_EXCL  &kp FI_AT      &kp FI_HASH   &trans
   &trans &kp FI_LPAR &kp FI_RPAR &kp FI_LT   &kp FI_GT   &kp FI_FSLH &trans &trans &kp FI_DQT   &kp FI_SQT   &kp FI_COLON &kp FI_SEMI    &kp FI_QMARK  &trans
   &trans &kp FI_DLLR &kp FI_PRCNT &kp FI_CARET &kp FI_AMPS &kp FI_ASTRK                     &kp FI_PIPE  &kp FI_BSLH  &kp FI_PLUS  &kp FI_MINUS   &kp FI_EQUAL  &trans
                              &trans   &trans   &trans                   &trans  &trans    &trans
            >;
        };



        base_mac_layer {
            display-name = "Base Mac";
// -----------------------------------------------------------------------------------------
// QWERTY layout optimized for Mac Finnish keyboard layout
// | ESC  |  Q  |  W  |  E  |  R  |  T  |LALT|RALT|  Y  |  U  |   I  |  O  |  P  | BSPC |
// | TAB  |  A  |  S  |  D  |  F  |  G  |LCMD|RCMD |  H  |  J  |   K  |  L  |  Ö  |  Ä   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |     |     |  N  |  M  |   ,  |  .  |  -  | SHFT |
//                   | OPT |PROG | SPC |             | ENT |FUNC|NUMBR|
            bindings = <
   &kp ESC   &kp FI_MAC_Q &kp FI_MAC_W &kp FI_MAC_E &kp FI_MAC_R &kp FI_MAC_T   &kp LALT   &kp RALT   &kp FI_MAC_Y &kp FI_MAC_U  &kp FI_MAC_I     &kp FI_MAC_O   &kp FI_MAC_P    &kp BSPC
   &kp TAB   &kp FI_MAC_A &kp FI_MAC_S &kp FI_MAC_D &kp FI_MAC_F &kp FI_MAC_G   &kp LCMD   &kp RCMD   &kp FI_MAC_H &kp FI_MAC_J  &kp FI_MAC_K     &kp FI_MAC_L   &kp FI_MAC_O_UMLAUT &kp FI_MAC_A_UMLAUT
   &kp LSHFT &kp FI_MAC_Z &kp FI_MAC_X &kp FI_MAC_C &kp FI_MAC_V &kp FI_MAC_B                         &kp FI_MAC_N &kp FI_MAC_M  &kp FI_MAC_COMMA &kp FI_MAC_DOT &kp FI_MAC_MINUS &kp RSHFT
                               &kp LALT &mo PROG_MAC &kp FI_MAC_SPACE                           &kp RET &mo FUNCTION_MAC &tog NUMBER_MAC
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN &inc_dec_kp C_PREV C_NEXT &inc_dec_kp C_BRI_DN C_BRI_UP>;
        };

        number_mac_layer {
            display-name = "Number Mac";  
// -----------------------------------------------------------------------------------------
// Numbers with mathematical operators optimized for Mac - toggle layer for calculations
// |TRANS |  1  |  2  |  3  |  4  |  5  |TRANS|TRANS|  6  |  7  |  8  |  9  |  0  |TRANS |
// |TRANS |  +  |  -  |  *  |  /  |  =  |TRANS|TRANS|  %  |  ^  |  &  |  |  |  (  |  )   |
// |TRANS |  <  |  >  | <=  | >=  | !=  |     |     |  €  |  $  |  §  |TRANS|TRANS|TRANS |
//                   |TRANS|TRANS|TRANS |             |TRANS|TRANS|NUMBR|
            bindings = <
   &trans &kp FI_MAC_N1   &kp FI_MAC_N2    &kp FI_MAC_N3        &kp FI_MAC_N4         &kp FI_MAC_N5         &trans &trans        &kp FI_MAC_N6    &kp FI_MAC_N7    &kp FI_MAC_N8   &kp FI_MAC_N9   &kp FI_MAC_N0    &trans
   &trans &kp FI_MAC_PLUS &kp FI_MAC_MINUS &kp FI_MAC_ASTRK     &kp FI_MAC_FSLH       &kp FI_MAC_EQUAL      &trans &trans        &kp FI_MAC_PRCNT &kp FI_MAC_CARET &kp FI_MAC_AMPS &kp FI_MAC_PIPE    &kp FI_MAC_LPAR  &kp FI_MAC_RPAR
   &trans &kp FI_MAC_LT   &kp FI_MAC_GT    &mac_less_equal      &mac_greater_equal    &mac_not_equal                               &kp FI_MAC_EURO  &kp FI_MAC_DLLR  &kp FI_MAC_SECT &trans      &trans &trans
                               &trans       &trans         &trans                         &trans  &trans    &tog NUMBER_MAC
            >;
        };

        function_mac_layer {
            display-name = "Function Mac";
// -----------------------------------------------------------------------------------------
// Function keys (F1-F12), navigation, and basic punctuation - hold layer for Mac
// |TRANS| F1  | F2  | F3  | F4  | F5  |TRANS|TRANS| F6  | F7  | F8  | F9  | F10 | DEL  |
// |TRANS| F11 | F12 |  ?  |  :  |  ;  |TRANS|TRANS|  ←  |  ↓  |  ↑  |  →  |PGUP |PGDN  |
// |TRANS| '   | "   |  <  |  >  |  "  |     |     |HOME | END |UNDO |REDO |STAB |TRANS |
//                   |TRANS|TRANS|TRANS|             |TRANS|TRANS|TRANS|
            bindings = <
   &trans &kp FI_MAC_F1       &kp FI_MAC_F2      &kp FI_MAC_F3    &kp FI_MAC_F4    &kp FI_MAC_F5     &trans &trans  &kp FI_MAC_F6   &kp FI_MAC_F7   &kp FI_MAC_F8     &kp FI_MAC_F9      &kp FI_MAC_F10         &kp DEL
   &trans &kp FI_MAC_F11      &kp FI_MAC_F12     &kp FI_MAC_QMARK &kp FI_MAC_COLON &kp FI_MAC_SEMI &trans  &trans &kp LEFT &kp DOWN &kp UP     &kp RIGHT   &kp PG_UP       &kp PG_DN
   &trans &kp FI_MAC_SQT   &kp FI_MAC_DQT  &kp FI_MAC_LT &kp FI_MAC_GT &kp FI_MAC_DQT                       &kp HOME &kp END  &kp LG(FI_MAC_Z) &kp LG(LS(FI_MAC_Z))  &kp LS(TAB)     &trans
                              &trans    &trans  &trans                  &trans &trans  &trans
            >;
        };

        programming_mac_layer {
            display-name = "Programming Mac";
// -----------------------------------------------------------------------------------------  
// All programming symbols optimized for Mac Finnish layout - hold layer
// |TRANS|  {  |  }  |  [  |  ]  |  \  |TRANS|TRANS|  `  |  ~  |  !  |  @  |  #  |TRANS |
// |TRANS|  (  |  )  |  <  |  >  |  /  |TRANS|TRANS|  "  |  '  |  :  |  ;  |  ?  |TRANS |
// |TRANS|  $  |  %  |  ^  |  &  |  *  |     |     |  |  |  \  |  +  |  -  |  =  |TRANS |
//                   |TRANS|PROG |TRANS|             |TRANS|TRANS|TRANS|
            bindings = <
   &trans &kp FI_MAC_LBRC    &kp FI_MAC_RBRC    &kp FI_MAC_LBKT    &kp FI_MAC_RBKT    &kp FI_MAC_BSLH    &trans &trans &kp FI_MAC_GRAVE &kp FI_MAC_TILDE   &kp FI_MAC_EXCL  &kp FI_MAC_AT        &kp FI_MAC_HASH     &trans
   &trans &kp FI_MAC_LPAR  &kp FI_MAC_RPAR  &kp FI_MAC_LT    &kp FI_MAC_GT    &kp FI_MAC_FSLH  &trans &trans &kp FI_MAC_DQT   &kp FI_MAC_SQT   &kp FI_MAC_COLON &kp FI_MAC_SEMI    &kp FI_MAC_QMARK  &trans
   &trans &kp FI_MAC_DLLR  &kp FI_MAC_PRCNT &kp FI_MAC_CARET &kp FI_MAC_AMPS  &kp FI_MAC_ASTRK                     &kp FI_MAC_PIPE    &kp FI_MAC_BSLH    &kp FI_MAC_PLUS  &kp FI_MAC_MINUS   &kp FI_MAC_EQUAL  &trans
                              &trans   &trans   &trans                   &trans  &trans    &trans
            >;
        };
        keyboard_layer {
            display-name = "Keyboard";
// -----------------------------------------------------------------------------------------
// System management - Bluetooth, RGB, reset functions - 3-key combo access
// |TRANS | BT1 | BT2 | BT3 | BT4 | BT5 |TRANS|TRANS|WIN/L|     |     |     | MAC |TRANS |
// |TRANS |BTCLR|RGBTG| RST |BOOT |UNLCK|TRANS|TRANS| ←   | ↓   | ↑   | →   |     |TRANS |
// |TRANS |     |     |     |     |     |     |     |     |     |     |     |     |TRANS |
//                   |TRANS|TRANS|TRANS|             |TRANS|TRANS|TRANS|
            bindings = <
   &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &trans &to BASE     &trans   &trans &trans    &to BASE_MAC &trans
   &trans &bt BT_CLR   &rgb_ug RGB_TOG &sys_reset &bootloader &studio_unlock &trans &trans &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &trans &trans       &trans          &trans     &trans      &trans                            &trans   &trans   &trans &trans    &trans &trans
                                        &trans     &trans      &trans                           &trans &trans   &trans
            >;
        };
    };
};
